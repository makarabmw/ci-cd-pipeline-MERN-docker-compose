name: EC2 CD Pipeline on AWS

on:
  workflow_run:
    workflows: ["Docker CI for Docker Hub Pipeline"]
    types:
      - completed

jobs:
  ec2-cd:
    runs-on: ubuntu-latest

    steps:
      - name: SSH into EC2 instance
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |

            echo "Checking repository..."
            if [ ! -d "/home/ubuntu/ci-cd-pipeline-MERN-docker-compose" ]; then
                git clone https://github.com/makarabmw/ci-cd-pipeline-MERN-docker-compose.git /home/ubuntu/ci-cd-pipeline-MERN-docker-compose
            else
                cd /home/ubuntu/ci-cd-pipeline-MERN-docker-compose && git pull origin main
            fi

            cd /home/ubuntu/ci-cd-pipeline-MERN-docker-compose

            echo "Starting containers....."           
            sudo IMAGE_TAG=$((${{ github.run_number }} + 1)) docker-compose up -d --scale frontend=2 --scale backend=2 --no-recreate

            echo "Removing old frontend container..."
            FRONTEND_CONTAINER=$(sudo docker ps -q | xargs -r sudo docker inspect --format='{{.Name}}' | grep frontend | tail -n 1)
            if [ -n "$FRONTEND_CONTAINER" ]; then sudo docker rm -f "$FRONTEND_CONTAINER"; fi

            echo "Removing old backend container..."
            BACKEND_CONTAINER=$(sudo docker ps -q | xargs -r sudo docker inspect --format='{{.Name}}' | grep backend | tail -n 1)
            if [ -n "$BACKEND_CONTAINER" ]; then sudo docker rm -f "$BACKEND_CONTAINER"; fi

            echo "Reloading Nginx..."
            NGINX_CONTAINER=$(sudo docker ps --format "{{.Names}}" | grep nginx | head -n 1)
            if [ -n "$NGINX_CONTAINER" ]; then sudo docker exec "$NGINX_CONTAINER" nginx -s reload; fi
